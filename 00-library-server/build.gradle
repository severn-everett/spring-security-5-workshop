buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
        asciidoctorVersion = '1.5.6'
        snippetsDir = file('build/generated-snippets')
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "org.asciidoctor.convert"

group = 'com.example'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 8

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

asciidoctor {
    setOptions([
            'doctype': 'book',
            'backend': 'html5'
    ])
    setAttributes([
            'snippets'          : snippetsDir,
            'source-highlighter': 'coderay',
            'toc'               : 'left',
            'toclevels'         : '3',
            'sectlinks'         : 'true'
    ])
    dependsOn test
}

bootJar {
    dependsOn test, asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'BOOT-INF/classes/static/docs'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.apache.commons:commons-lang3')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile('io.projectreactor:reactor-test')
    testCompile('com.nhaarman:mockito-kotlin:1.5.0')
    testCompile('org.springframework.restdocs:spring-restdocs-webtestclient')
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')
    testRuntime('org.junit.platform:junit-platform-engine')
    testRuntime('org.junit.platform:junit-platform-launcher:1.2.0')
}
